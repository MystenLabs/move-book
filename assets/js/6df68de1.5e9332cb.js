"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1307],{4985:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"object/digital-assets","title":"Move - Language for Digital Assets","description":"Smart-contract programming languages have historically focused on defining and managing digital","source":"@site/../book/object/digital-assets.md","sourceDirName":"object","slug":"/object/digital-assets","permalink":"/object/digital-assets","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"bookSidebar","previous":{"title":"Object Model","permalink":"/object/"},"next":{"title":"6.2. Evolution of Move","permalink":"/object/evolution-of-move"}}');var t=s(3420),i=s(5521);const r={},o="Move - Language for Digital Assets",l={},c=[{value:"Summary",id:"summary",level:2},{value:"Further Reading",id:"further-reading",level:2}];function d(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"move---language-for-digital-assets",children:"Move - Language for Digital Assets"})}),"\n",(0,t.jsx)(n.p,{children:"Smart-contract programming languages have historically focused on defining and managing digital\nassets. For example, the ERC-20 standard in Ethereum pioneered a set of standards to interact with\ndigital currency tokens, establishing a blueprint for creating and managing digital currencies on\nthe blockchain. Subsequently, the introduction of the ERC-721 standard marked a significant\nevolution, popularizing the concept of non-fungible tokens (NFTs), which represent unique,\nindivisible assets. These standards laid the groundwork for the complex digital assets we see today."}),"\n",(0,t.jsx)(n.p,{children:"However, Ethereum's programming model lacked a native representation of assets. In other words,\nexternally, a Smart Contract behaved like an asset, but the language itself did not have a way to\ninherently represent assets. From the start, Move aimed to provide a first-class abstraction for\nassets, opening up new avenues for thinking about and programming assets."}),"\n",(0,t.jsx)(n.p,{children:"It is important to highlight which properties are essential for an asset:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ownership:"})," Every asset is associated with an owner(s), mirroring the straightforward concept\nof ownership in the physical world\u2014just as you own a car, you can own a digital asset. Move\nenforces ownership in such a way that once an asset is ",(0,t.jsx)(n.em,{children:"moved"}),", the previous owner completely\nloses any control over it. This mechanism ensures a clear and secure change of ownership."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Non-copyable:"})," In the real world, unique items cannot be duplicated effortlessly. Move applies\nthis principle to digital assets, ensuring they cannot be arbitrarily copied within the program.\nThis property is crucial for maintaining the scarcity and uniqueness of digital assets, mirroring\nthe intrinsic value of physical assets."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Non-discardable:"})," Just as you cannot accidentally lose a house or a car without a trace, Move\nensures that no asset can be discarded or lost in a program. Instead, assets must be explicitly\ntransferred or destroyed. This property guarantees the deliberate handling of digital assets,\npreventing accidental loss and ensuring accountability in asset management."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Move managed to encapsulate these properties in its design, becoming an ideal language for digital\nassets."}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Move was designed to provide a first-class abstraction for digital assets, enabling developers to\ncreate and manage assets natively."}),"\n",(0,t.jsx)(n.li,{children:"Essential properties of digital assets include ownership, non-copyability, and non-discardability,\nwhich Move enforces in its design."}),"\n",(0,t.jsx)(n.li,{children:"Move's asset model mirrors real-world asset management, ensuring secure and accountable asset\nownership and transfer."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://developers.diem.com/papers/diem-move-a-language-with-programmable-resources/2019-06-18.pdf",children:"Move: A Language With Programmable Resources (pdf)"}),"\nby Sam Blackshear, Evan Cheng, David L. Dill, Victor Gao, Ben Maurer, Todd Nowacki, Alistair Pott,\nShaz Qadeer, Rain, Dario Russi, Stephane Sezer, Tim Zakian, Runtian Zhou*"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},5521:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var a=s(6672);const t={},i=a.createContext(t);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);