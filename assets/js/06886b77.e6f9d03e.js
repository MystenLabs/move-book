"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4959],{906:e=>{e.exports=JSON.parse('{"version":{"pluginId":"book","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"bookSidebar":[{"type":"link","label":"The Move Book","href":"/","docId":"index","unlisted":false},{"type":"link","label":"Foreword","href":"/foreword","docId":"foreword","unlisted":false},{"type":"category","label":"1. Before We Begin","items":[{"type":"link","label":"1.1. Install Sui","href":"/before-we-begin/install-sui","docId":"before-we-begin/install-sui","unlisted":false},{"type":"link","label":"1.2. Install MVR","href":"/before-we-begin/install-move-registry-cli","docId":"before-we-begin/install-move-registry-cli","unlisted":false},{"type":"link","label":"1.3. IDE Support","href":"/before-we-begin/ide-support","docId":"before-we-begin/ide-support","unlisted":false},{"type":"link","label":"1.4. Move 2024","href":"/before-we-begin/move-2024","docId":"before-we-begin/move-2024","unlisted":false}],"collapsed":false,"collapsible":false,"href":"/before-we-begin/"},{"type":"link","label":"2. Hello World!","href":"/your-first-move/hello-world","docId":"your-first-move/hello-world","unlisted":false},{"type":"link","label":"3. Hello Sui!","href":"/your-first-move/hello-sui","docId":"your-first-move/hello-sui","unlisted":false},{"type":"category","label":"4. Concepts","items":[{"type":"link","label":"4.1. Packages","href":"/concepts/packages","docId":"concepts/packages","unlisted":false},{"type":"link","label":"4.2. Manifest","href":"/concepts/manifest","docId":"concepts/manifest","unlisted":false},{"type":"link","label":"4.3. Address","href":"/concepts/address","docId":"concepts/address","unlisted":false},{"type":"link","label":"4.4. Account","href":"/concepts/what-is-an-account","docId":"concepts/what-is-an-account","unlisted":false},{"type":"link","label":"4.5. Transaction","href":"/concepts/what-is-a-transaction","docId":"concepts/what-is-a-transaction","unlisted":false}],"collapsed":false,"collapsible":false,"href":"/concepts/"},{"type":"category","label":"5. Move Basics","items":[{"type":"link","label":"5.1. Modules","href":"/move-basics/module","docId":"move-basics/module","unlisted":false},{"type":"link","label":"5.2. Comments","href":"/move-basics/comments","docId":"move-basics/comments","unlisted":false},{"type":"link","label":"5.3. Primitive Types","href":"/move-basics/primitive-types","docId":"move-basics/primitive-types","unlisted":false},{"type":"link","label":"5.4. Address Type","href":"/move-basics/address","docId":"move-basics/address","unlisted":false},{"type":"link","label":"5.5. Expressions","href":"/move-basics/expression","docId":"move-basics/expression","unlisted":false},{"type":"link","label":"5.6. Structs","href":"/move-basics/struct","docId":"move-basics/struct","unlisted":false},{"type":"link","label":"5.7. Abilities Introduction","href":"/move-basics/abilities-introduction","docId":"move-basics/abilities-introduction","unlisted":false},{"type":"link","label":"5.8. Ability: Drop","href":"/move-basics/drop-ability","docId":"move-basics/drop-ability","unlisted":false},{"type":"link","label":"5.9. Importing Modules","href":"/move-basics/importing-modules","docId":"move-basics/importing-modules","unlisted":false},{"type":"link","label":"5.10. Standard Library","href":"/move-basics/standard-library","docId":"move-basics/standard-library","unlisted":false},{"type":"link","label":"5.11. Vector","href":"/move-basics/vector","docId":"move-basics/vector","unlisted":false},{"type":"link","label":"5.12. Option","href":"/move-basics/option","docId":"move-basics/option","unlisted":false},{"type":"link","label":"5.13. String","href":"/move-basics/string","docId":"move-basics/string","unlisted":false},{"type":"link","label":"5.14. Control Flow","href":"/move-basics/control-flow","docId":"move-basics/control-flow","unlisted":false},{"type":"link","label":"5.15. Enums and Match","href":"/move-basics/enum-and-match","docId":"move-basics/enum-and-match","unlisted":false},{"type":"link","label":"5.16. Constants","href":"/move-basics/constants","docId":"move-basics/constants","unlisted":false},{"type":"link","label":"5.17. Aborting Execution","href":"/move-basics/assert-and-abort","docId":"move-basics/assert-and-abort","unlisted":false},{"type":"link","label":"5.18. Functions","href":"/move-basics/function","docId":"move-basics/function","unlisted":false},{"type":"link","label":"5.19. Struct Methods","href":"/move-basics/struct-methods","docId":"move-basics/struct-methods","unlisted":false},{"type":"link","label":"5.20. Visibility Modifiers","href":"/move-basics/visibility","docId":"move-basics/visibility","unlisted":false},{"type":"link","label":"5.21. Ownership and Scope","href":"/move-basics/ownership-and-scope","docId":"move-basics/ownership-and-scope","unlisted":false},{"type":"link","label":"5.22. Ability: Copy","href":"/move-basics/copy-ability","docId":"move-basics/copy-ability","unlisted":false},{"type":"link","label":"5.23. References","href":"/move-basics/references","docId":"move-basics/references","unlisted":false},{"type":"link","label":"5.24. Generics","href":"/move-basics/generics","docId":"move-basics/generics","unlisted":false},{"type":"link","label":"5.25. Type Reflection","href":"/move-basics/type-reflection","docId":"move-basics/type-reflection","unlisted":false},{"type":"link","label":"5.26. Testing","href":"/move-basics/testing","docId":"move-basics/testing","unlisted":false}],"collapsed":false,"collapsible":false,"href":"/move-basics/"},{"type":"category","label":"6. Object Model","items":[{"type":"link","label":"6.1. Language for Digital Assets","href":"/object/digital-assets","docId":"object/digital-assets","unlisted":false},{"type":"link","label":"6.2. Evolution of Move","href":"/object/evolution-of-move","docId":"object/evolution-of-move","unlisted":false},{"type":"link","label":"6.3. What is an Object?","href":"/object/object-model","docId":"object/object-model","unlisted":false},{"type":"link","label":"6.4. Ownership","href":"/object/ownership","docId":"object/ownership","unlisted":false},{"type":"link","label":"6.5. Fast Path & Consensus","href":"/object/fast-path-and-consensus","docId":"object/fast-path-and-consensus","unlisted":false}],"collapsed":false,"collapsible":false,"href":"/object/"},{"type":"category","label":"7. Using Objects","items":[{"type":"link","label":"7.1. Ability: Key","href":"/storage/key-ability","docId":"storage/key-ability","unlisted":false},{"type":"link","label":"7.2. Storage Functions","href":"/storage/storage-functions","docId":"storage/storage-functions","unlisted":false},{"type":"link","label":"7.3. Ability: Store","href":"/storage/store-ability","docId":"storage/store-ability","unlisted":false},{"type":"link","label":"7.4. UID and ID","href":"/storage/uid-and-id","docId":"storage/uid-and-id","unlisted":false},{"type":"link","label":"7.5. Transfer Restrictions","href":"/storage/transfer-restrictions","docId":"storage/transfer-restrictions","unlisted":false}],"collapsed":false,"collapsible":false,"href":"/storage/"},{"type":"category","label":"8. Advanced Programmability","items":[{"type":"link","label":"8.1. Transaction Context","href":"/programmability/transaction-context","docId":"programmability/transaction-context","unlisted":false},{"type":"link","label":"8.2. Module Initializer","href":"/programmability/module-initializer","docId":"programmability/module-initializer","unlisted":false},{"type":"link","label":"8.3. Pattern: Capability","href":"/programmability/capability","docId":"programmability/capability","unlisted":false},{"type":"link","label":"8.4. Epoch and Time","href":"/programmability/epoch-and-time","docId":"programmability/epoch-and-time","unlisted":false},{"type":"link","label":"8.5. Collections","href":"/programmability/collections","docId":"programmability/collections","unlisted":false},{"type":"link","label":"8.6. Pattern: Wrapper Type","href":"/programmability/wrapper-type-pattern","docId":"programmability/wrapper-type-pattern","unlisted":false},{"type":"link","label":"8.7. Dynamic Fields","href":"/programmability/dynamic-fields","docId":"programmability/dynamic-fields","unlisted":false},{"type":"link","label":"8.8. Dynamic Object Fields","href":"/programmability/dynamic-object-fields","docId":"programmability/dynamic-object-fields","unlisted":false},{"type":"link","label":"8.9. Dynamic Collections","href":"/programmability/dynamic-collections","docId":"programmability/dynamic-collections","unlisted":false},{"type":"link","label":"8.10. Pattern: Witness","href":"/programmability/witness-pattern","docId":"programmability/witness-pattern","unlisted":false},{"type":"link","label":"8.11. One-Time Witness","href":"/programmability/one-time-witness","docId":"programmability/one-time-witness","unlisted":false},{"type":"link","label":"8.12. Publisher Authority","href":"/programmability/publisher","docId":"programmability/publisher","unlisted":false},{"type":"link","label":"8.13. Object Display","href":"/programmability/display","docId":"programmability/display","unlisted":false},{"type":"link","label":"8.14. Events","href":"/programmability/events","docId":"programmability/events","unlisted":false},{"type":"link","label":"8.15. Sui Framework","href":"/programmability/sui-framework","docId":"programmability/sui-framework","unlisted":false},{"type":"link","label":"8.16. Pattern: Hot Potato","href":"/programmability/hot-potato-pattern","docId":"programmability/hot-potato-pattern","unlisted":false},{"type":"link","label":"8.17. BCS","href":"/programmability/bcs","docId":"programmability/bcs","unlisted":false}],"collapsed":false,"collapsible":false,"href":"/programmability/"},{"type":"category","label":"Guides","items":[{"type":"link","label":"2024 Migration Guide","href":"/guides/2024-migration-guide","docId":"guides/2024-migration-guide","unlisted":false},{"type":"link","label":"Upgradability Practices","href":"/guides/upgradeability-practices","docId":"guides/upgradeability-practices","unlisted":false},{"type":"link","label":"Building Against Limits","href":"/guides/building-against-limits","docId":"guides/building-against-limits","unlisted":false},{"type":"link","label":"Better Error Handling","href":"/guides/better-error-handling","docId":"guides/better-error-handling","unlisted":false},{"type":"link","label":"Code Quality Checklist","href":"/guides/code-quality-checklist","docId":"guides/code-quality-checklist","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Appendix","items":[{"type":"link","label":"A. Glossary","href":"/appendix/glossary","docId":"appendix/glossary","unlisted":false},{"type":"link","label":"B. Reserved Addresses","href":"/appendix/reserved-addresses","docId":"appendix/reserved-addresses","unlisted":false},{"type":"link","label":"C. Publications","href":"/appendix/publications","docId":"appendix/publications","unlisted":false},{"type":"link","label":"D. Contributing","href":"/appendix/contributing","docId":"appendix/contributing","unlisted":false},{"type":"link","label":"E. Acknowledgements","href":"/appendix/acknowledgements","docId":"appendix/acknowledgements","unlisted":false}],"collapsed":false,"collapsible":false}]},"docs":{"404":{"id":"404","title":"Page not Found","description":"You\'re looking for a page that doesn\'t exist, or has been moved. Please check the URL and try again."},"appendix/acknowledgements":{"id":"appendix/acknowledgements","title":"Appendix E: Acknowledgements","description":"The Rust Book has been a great inspiration for this book. I am","sidebar":"bookSidebar"},"appendix/contributing":{"id":"appendix/contributing","title":"Appendix D: Contributing","description":"To contribute to this book, please, submit a pull request to the","sidebar":"bookSidebar"},"appendix/glossary":{"id":"appendix/glossary","title":"Appendix A: Glossary","description":"- Fast Path - term used to describe a transaction that does not involve shared objects, and can be","sidebar":"bookSidebar"},"appendix/publications":{"id":"appendix/publications","title":"Appendix C: Publications","description":"This section lists publications related to Move and Sui.","sidebar":"bookSidebar"},"appendix/reserved-addresses":{"id":"appendix/reserved-addresses","title":"Appendix B: Reserved Addresses","description":"Reserved addresses are special addresses that have a specific purpose on Sui. They stay the same","sidebar":"bookSidebar"},"before-we-begin/ide-support":{"id":"before-we-begin/ide-support","title":"Set Up Your IDE","description":"There are two most popular IDEs for Move development: VSCode and IntelliJ IDEA. Both of them provide","sidebar":"bookSidebar"},"before-we-begin/index":{"id":"before-we-begin/index","title":"Before We Begin","description":"Move requires an environment to run and develop applications, and in this small chapter we will","sidebar":"bookSidebar"},"before-we-begin/install-move-registry-cli":{"id":"before-we-begin/install-move-registry-cli","title":"Install MVR","description":"Move Registry (MVR) is a package manager for Move. It allows anyone to","sidebar":"bookSidebar"},"before-we-begin/install-sui":{"id":"before-we-begin/install-sui","title":"Install Sui","description":"Move is a compiled language, so you need to install a compiler to be able to write and run Move","sidebar":"bookSidebar"},"before-we-begin/move-2024":{"id":"before-we-begin/move-2024","title":"Move 2024","description":"Move 2024 is the current edition of the Move language maintained by Mysten Labs. All of the examples","sidebar":"bookSidebar"},"concepts/address":{"id":"concepts/address","title":"Address","description":"\x3c!--","sidebar":"bookSidebar"},"concepts/index":{"id":"concepts/index","title":"Concepts","description":"In this chapter you will learn about the basic concepts of Sui and Move. You will learn what is a","sidebar":"bookSidebar"},"concepts/manifest":{"id":"concepts/manifest","title":"Package Manifest","description":"The Move.toml is a manifest file that describes the package and its dependencies.","sidebar":"bookSidebar"},"concepts/packages":{"id":"concepts/packages","title":"Package","description":"\x3c!--","sidebar":"bookSidebar"},"concepts/what-is-a-transaction":{"id":"concepts/what-is-a-transaction","title":"Transaction","description":"Transaction is a fundamental concept in the blockchain world. It is a way to interact with a","sidebar":"bookSidebar"},"concepts/what-is-an-account":{"id":"concepts/what-is-an-account","title":"Account","description":"\x3c!--","sidebar":"bookSidebar"},"foreword":{"id":"foreword","title":"Foreword","description":"This book is dedicated to Move, a smart contract language that captures the essence of safe","sidebar":"bookSidebar"},"guides/2024-migration-guide":{"id":"guides/2024-migration-guide","title":"Move 2024 Migration Guide","description":"Move 2024 is the new edition of the Move language that is maintained by Mysten Labs. This guide is","sidebar":"bookSidebar"},"guides/better-error-handling":{"id":"guides/better-error-handling","title":"Better Error Handling","description":"Whenever execution encounters an abort, transaction fails and abort code is returned to the caller.","sidebar":"bookSidebar"},"guides/building-against-limits":{"id":"guides/building-against-limits","title":"Building Against Limits","description":"To guarantee the safety and security of the network, Sui has certain limits and restrictions. These","sidebar":"bookSidebar"},"guides/code-quality-checklist":{"id":"guides/code-quality-checklist","title":"Code Quality Checklist","description":"The rapid evolution of the Move language and its ecosystem has rendered many older practices","sidebar":"bookSidebar"},"guides/index":{"id":"guides/index","title":"Guides","description":"This section contains a collection of guides that cover various aspects of programming on Sui. They"},"guides/open-sourcing-libraries":{"id":"guides/open-sourcing-libraries","title":"Open Sourcing Libraries","description":"Open sourcing libraries is a great way to contribute to the Move ecosystem. This guide will help you"},"guides/upgradeability-practices":{"id":"guides/upgradeability-practices","title":"Upgradeability Practices","description":"To talk about best practices for upgradeability, we need to first understand what can be upgraded in","sidebar":"bookSidebar"},"index":{"id":"index","title":"The Move Book","description":"This is The Move Book - a comprehensive guide to the Move programming language and the Sui","sidebar":"bookSidebar"},"move-basics/abilities-introduction":{"id":"move-basics/abilities-introduction","title":"Abilities: Introduction","description":"Move has a unique type system which allows customizing type abilities.","sidebar":"bookSidebar"},"move-basics/address":{"id":"move-basics/address","title":"Address Type","description":"\x3c!--","sidebar":"bookSidebar"},"move-basics/assert-and-abort":{"id":"move-basics/assert-and-abort","title":"Aborting Execution","description":"\x3c!--","sidebar":"bookSidebar"},"move-basics/comments":{"id":"move-basics/comments","title":"Comments","description":"\x3c!--","sidebar":"bookSidebar"},"move-basics/constants":{"id":"move-basics/constants","title":"Constants","description":"\x3c!--","sidebar":"bookSidebar"},"move-basics/control-flow":{"id":"move-basics/control-flow","title":"Control Flow","description":"\x3c!--","sidebar":"bookSidebar"},"move-basics/copy-ability":{"id":"move-basics/copy-ability","title":"Abilities: Copy","description":"In Move, the copy ability on a type indicates that the instance or the value of the type can be","sidebar":"bookSidebar"},"move-basics/drop-ability":{"id":"move-basics/drop-ability","title":"Abilities: Drop","description":"\x3c!-- TODO:","sidebar":"bookSidebar"},"move-basics/enum-and-match":{"id":"move-basics/enum-and-match","title":"Enums and Match","description":"An enum is a user-defined data structure that, unlike a struct, can represent multiple","sidebar":"bookSidebar"},"move-basics/expression":{"id":"move-basics/expression","title":"Expression","description":"In programming languages, an expression is a unit of code that returns a value. In Move, almost","sidebar":"bookSidebar"},"move-basics/function":{"id":"move-basics/function","title":"Functions","description":"Functions are the building blocks of Move programs. They are called from","sidebar":"bookSidebar"},"move-basics/generics":{"id":"move-basics/generics","title":"Generics","description":"Generics are a way to define a type or function that can work with any type. This is useful when you","sidebar":"bookSidebar"},"move-basics/importing-modules":{"id":"move-basics/importing-modules","title":"Importing Modules","description":"\x3c!--","sidebar":"bookSidebar"},"move-basics/index":{"id":"move-basics/index","title":"Move Basics","description":"This chapter is all about the basic syntax of the Move language. It covers the basics of the","sidebar":"bookSidebar"},"move-basics/module":{"id":"move-basics/module","title":"Module","description":"\x3c!--","sidebar":"bookSidebar"},"move-basics/option":{"id":"move-basics/option","title":"Option","description":"Option is a type that represents an optional value which may or may not exist. The concept of","sidebar":"bookSidebar"},"move-basics/ownership-and-scope":{"id":"move-basics/ownership-and-scope","title":"Ownership and Scope","description":"Every variable in Move has a scope and an owner. The scope is the range of code where the variable","sidebar":"bookSidebar"},"move-basics/primitive-types":{"id":"move-basics/primitive-types","title":"Primitive Types","description":"For simple values, Move has a number of built-in primitive types. They\'re the foundation for all","sidebar":"bookSidebar"},"move-basics/references":{"id":"move-basics/references","title":"References","description":"\x3c!--","sidebar":"bookSidebar"},"move-basics/standard-library":{"id":"move-basics/standard-library","title":"Standard Library","description":"The Move Standard Library provides functionality for native types and operations. It is a standard","sidebar":"bookSidebar"},"move-basics/string":{"id":"move-basics/string","title":"String","description":"While Move does not have a built-in type to represent strings, it does have two standard","sidebar":"bookSidebar"},"move-basics/struct":{"id":"move-basics/struct","title":"Custom Types with Struct","description":"Move\'s type system shines when it comes to defining custom types. User defined types can be custom","sidebar":"bookSidebar"},"move-basics/struct-methods":{"id":"move-basics/struct-methods","title":"Struct Methods","description":"Move Compiler supports receiver syntax e.f(), which allows defining methods which can be called","sidebar":"bookSidebar"},"move-basics/testing":{"id":"move-basics/testing","title":"Testing","description":"Testing is a crucial aspect of software development, especially in blockchain applications where","sidebar":"bookSidebar"},"move-basics/type-reflection":{"id":"move-basics/type-reflection","title":"Type Reflection","description":"In programming languages, reflection is the ability of a program to examine and modify its own","sidebar":"bookSidebar"},"move-basics/vector":{"id":"move-basics/vector","title":"Vector","description":"Vectors are a native way to store collections of elements in Move. They are similar to arrays in","sidebar":"bookSidebar"},"move-basics/visibility":{"id":"move-basics/visibility","title":"Visibility Modifiers","description":"Every module member has a visibility. By default, all module members are private - meaning they","sidebar":"bookSidebar"},"object/digital-assets":{"id":"object/digital-assets","title":"Move - Language for Digital Assets","description":"Smart-contract programming languages have historically focused on defining and managing digital","sidebar":"bookSidebar"},"object/evolution-of-move":{"id":"object/evolution-of-move","title":"Evolution of Move","description":"While Move was created to manage digital assets, its initial storage model was bulky and not","sidebar":"bookSidebar"},"object/fast-path-and-consensus":{"id":"object/fast-path-and-consensus","title":"Fast Path & Consensus","description":"The Object Model allows for variable transaction execution paths, depending on the object\'s","sidebar":"bookSidebar"},"object/index":{"id":"object/index","title":"Object Model","description":"This chapter describes the Object Model of Sui. It focuses on the theory and concepts behind the","sidebar":"bookSidebar"},"object/object-model":{"id":"object/object-model","title":"What is an Object?","description":"The Object Model in Sui can be viewed as a high-level abstraction representing digital assets as","sidebar":"bookSidebar"},"object/ownership":{"id":"object/ownership","title":"Ownership","description":"Sui introduces four distinct ownership types for objects: single owner, shared state, immutable","sidebar":"bookSidebar"},"programmability/authorization-patterns":{"id":"programmability/authorization-patterns","title":"Authorization Patterns","description":""},"programmability/balance-and-coin":{"id":"programmability/balance-and-coin","title":"Balance & Coin","description":""},"programmability/bcs":{"id":"programmability/bcs","title":"Binary Canonical Serialization","description":"Binary Canonical Serialization (BCS) is a binary encoding format for structured data. It was","sidebar":"bookSidebar"},"programmability/capability":{"id":"programmability/capability","title":"Pattern: Capability","description":"In programming, a capability is a token that gives the owner the right to perform a specific","sidebar":"bookSidebar"},"programmability/collections":{"id":"programmability/collections","title":"Collections","description":"Collection types are a fundamental part of any programming language. They are used to store a","sidebar":"bookSidebar"},"programmability/cryptography-and-hashing":{"id":"programmability/cryptography-and-hashing","title":"Cryptography and Hashing","description":""},"programmability/display":{"id":"programmability/display","title":"Object Display","description":"Objects on Sui are explicit in their structure and behavior and can be displayed in an","sidebar":"bookSidebar"},"programmability/dynamic-collections":{"id":"programmability/dynamic-collections","title":"Dynamic Collections","description":"Sui Framework offers a variety of collection types that build on the","sidebar":"bookSidebar"},"programmability/dynamic-fields":{"id":"programmability/dynamic-fields","title":"Dynamic Fields","description":"Sui Object model allows objects to be attached to other objects as dynamic fields. The behavior is","sidebar":"bookSidebar"},"programmability/dynamic-object-fields":{"id":"programmability/dynamic-object-fields","title":"Dynamic Object Fields","description":"This section expands on the Dynamic Fields. Please, read it first to","sidebar":"bookSidebar"},"programmability/epoch-and-time":{"id":"programmability/epoch-and-time","title":"Epoch and Time","description":"Sui has two ways of accessing the current time: Epoch and Time. The former represents","sidebar":"bookSidebar"},"programmability/events":{"id":"programmability/events","title":"Events","description":"Events are a way to notify off-chain listeners about on-chain events. They are used to emit","sidebar":"bookSidebar"},"programmability/fast-path":{"id":"programmability/fast-path","title":"Fast Path","description":"Due to the object model and the data organization model of Sui, some operations can be performed in"},"programmability/hot-potato-pattern":{"id":"programmability/hot-potato-pattern","title":"Pattern: Hot Potato","description":"A case in the abilities system - a struct without any abilities - is called hot potato. It cannot","sidebar":"bookSidebar"},"programmability/index":{"id":"programmability/index","title":"Advanced Programmability","description":"In previous chapters we\'ve covered the basics of Move and","sidebar":"bookSidebar"},"programmability/module-initializer":{"id":"programmability/module-initializer","title":"Module Initializer","description":"A common use case in many applications is to run certain code just once when the package is","sidebar":"bookSidebar"},"programmability/object-capability":{"id":"programmability/object-capability","title":"Object Capability","description":""},"programmability/one-time-witness":{"id":"programmability/one-time-witness","title":"One Time Witness","description":"While regular Witness is a great way to statically prove the ownership of a","sidebar":"bookSidebar"},"programmability/publisher":{"id":"programmability/publisher","title":"Publisher Authority","description":"In application design and development, it is often needed to prove publisher authority. This is","sidebar":"bookSidebar"},"programmability/randomness":{"id":"programmability/randomness","title":"Randomness","description":"\x3c!--"},"programmability/sui-framework":{"id":"programmability/sui-framework","title":"Sui Framework","description":"Sui Framework is a default dependency set in the Package Manifest. It","sidebar":"bookSidebar"},"programmability/transaction-context":{"id":"programmability/transaction-context","title":"Transaction Context","description":"Every transaction has the execution context. The context is a set of predefined variables that are","sidebar":"bookSidebar"},"programmability/witness-pattern":{"id":"programmability/witness-pattern","title":"Pattern: Witness","description":"Witness is a pattern of proving an existence by constructing a proof. In the context of programming,","sidebar":"bookSidebar"},"programmability/wrapper-type-pattern":{"id":"programmability/wrapper-type-pattern","title":"Pattern: Wrapper type","description":"Sometimes, there\u2019s a need to create a new type that behaves similarly to an existing type but with","sidebar":"bookSidebar"},"storage/index":{"id":"storage/index","title":"Using Objects","description":"In the Object Model chapter we briefly explained the evolution of the Move language","sidebar":"bookSidebar"},"storage/key-ability":{"id":"storage/key-ability","title":"The Key Ability","description":"In the Basic Syntax chapter we already covered two out of four abilities -","sidebar":"bookSidebar"},"storage/storage-functions":{"id":"storage/storage-functions","title":"Storage Functions","description":"The module that defines main storage operations is sui::transfer. It is implicitly imported in all","sidebar":"bookSidebar"},"storage/store-ability":{"id":"storage/store-ability","title":"Ability: Store","description":"Now that you have an understanding of top-level storage functions which are enabled by the","sidebar":"bookSidebar"},"storage/transfer-restrictions":{"id":"storage/transfer-restrictions","title":"Restricted and Public Transfer","description":"Storage Operations that we described in the previous sections are","sidebar":"bookSidebar"},"storage/transfer-to-object":{"id":"storage/transfer-to-object","title":"Transfer to Object?","description":"The transfer::transfer call takes the receiver address as the second argument, and while in most"},"storage/uid-and-id":{"id":"storage/uid-and-id","title":"UID and ID","description":"The UID type is defined in the sui::object module and is a wrapper around an ID which, in","sidebar":"bookSidebar"},"your-first-move/hello-sui":{"id":"your-first-move/hello-sui","title":"Hello, Sui!","description":"In the previous section we created a new package and demonstrated the basic flow","sidebar":"bookSidebar"},"your-first-move/hello-world":{"id":"your-first-move/hello-world","title":"Hello, World!","description":"In this chapter, you will learn how to create a new package, write a simple module, compile it, and","sidebar":"bookSidebar"}}}}')}}]);