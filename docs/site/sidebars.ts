import * as yaml from 'yaml';
import fs from 'fs';
import type { SidebarsConfig } from '@docusaurus/plugin-content-docs';

// This runs in Node.js - Don't use client-side code here (browser APIs, JSX...)

/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */
const sidebars: SidebarsConfig = {
  // By default, Docusaurus generates a sidebar from the docs folder structure
  // bookSidebar: [{ type: 'autogenerated', dirName: 'book' }],
  bookSidebar: [
    'index',
    'foreword',
    {
      type: 'category',
      label: 'Before we begin',
      link: { type: 'doc', id: 'before-we-begin/index' },
      items: [
        'before-we-begin/install-sui',
        'before-we-begin/ide-support',
        'before-we-begin/move-2024',
      ],
    },
    'your-first-move/hello-world',
    'your-first-move/hello-sui',
    {
      type: 'category',
      label: 'Concepts',
      link: { type: 'doc', id: 'concepts/index' },
      items: [
        'concepts/packages',
        'concepts/manifest',
        'concepts/address',
        'concepts/what-is-an-account',
        'concepts/what-is-a-transaction',
      ],
    },
    {
      type: 'category',
      label: 'Move Basics',
      link: { type: 'doc', id: 'move-basics/index' },
      items: [
        'move-basics/module',
        'move-basics/comments',
        'move-basics/primitive-types',
        'move-basics/address',
        'move-basics/expression',
        'move-basics/struct',
        'move-basics/abilities-introduction',
        'move-basics/drop-ability',
        'move-basics/importing-modules',
        'move-basics/standard-library',
        'move-basics/vector',
        'move-basics/option',
        'move-basics/string',
        'move-basics/control-flow',
        'move-basics/enum-and-match',
        'move-basics/constants',
        'move-basics/assert-and-abort',
        'move-basics/function',
        'move-basics/struct-methods',
        'move-basics/visibility',
        'move-basics/ownership-and-scope',
        'move-basics/copy-ability',
        'move-basics/references',
        'move-basics/generics',
        'move-basics/type-reflection',
        'move-basics/testing',
      ],
    },
    {
      type: 'category',
      label: 'Object Model',
      link: { type: 'doc', id: 'object/index' },
      items: [
        'object/digital-assets',
        'object/evolution-of-move',
        'object/object-model',
        'object/ownership',
        'object/fast-path-and-consensus',
      ],
    },
    {
      type: 'category',
      label: 'Using Objects',
      link: { type: 'doc', id: 'storage/index' },
      items: [
        'storage/key-ability',
        'storage/storage-functions',
        'storage/store-ability',
        'storage/uid-and-id',
        'storage/transfer-restrictions',
      ],
    },
    {
      type: 'category',
      label: 'Advanced Programmability',
      link: { type: 'doc', id: 'programmability/index' },
      items: [
        'programmability/transaction-context',
        'programmability/module-initializer',
        'programmability/capability',
        'programmability/epoch-and-time',
        'programmability/collections',
        'programmability/wrapper-type-pattern',
        'programmability/dynamic-fields',
        'programmability/dynamic-object-fields',
        'programmability/dynamic-collections',
        'programmability/witness-pattern',
        'programmability/one-time-witness',
        'programmability/publisher',
        'programmability/display',
        'programmability/events',
        'programmability/sui-framework',
        'programmability/hot-potato-pattern',
        'programmability/bcs',
      ],
    },
    {
      type: 'category',
      label: 'Guides',
      link: { type: 'doc', id: 'guides/index' },
      items: [
        // 'guides/2024-migration-guide',
        'guides/upgradeability-practices',
        'guides/building-against-limits',
        'guides/better-error-handling',
        'guides/code-quality-checklist',
      ],
    },
    {
      type: 'category',
      label: 'Appendix',
      items: [
        'appendix/glossary',
        'appendix/reserved-addresses',
        'appendix/publications',
        'appendix/contributing',
        'appendix/acknowledgements',
      ],
    },
  ],
};

export default sidebars;
